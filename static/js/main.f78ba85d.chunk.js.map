{"version":3,"sources":["Users/User.style.tsx","Users/Users.tsx","api/jsonPlaceholderApi.ts","api/createApiService.ts","App/App.style.tsx","App/App.tsx","hooks/useUsers.ts","utils/filterUsers.tsx","reportWebVitals.ts","index.tsx"],"names":["UserComponent","styled","li","Name","span","Username","Users","users","map","user","index","name","username","api","baseUrl","joinWithBaseUrl","url","get","a","axios","response","data","post","createApiService","ContentWrapper","div","AppWrapper","App","content","useState","setUsers","error","setError","isError","useMemo","isLoading","setIsLoading","useEffect","then","id","catch","message","useUsers","inputValue","setInputValue","handleInputChange","e","target","value","useInput","searchValue","filteredUsers","searchPhrase","filter","usernameLowerCase","toLowerCase","searchPhraseLowerCase","includes","filterUsers","type","onChange","placeholder","WrapperApp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f78ba85d.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const UserComponent = styled.li`\r\n  color: #aaa;\r\n\r\n  span {\r\n    margin: 0 5px;\r\n  }\r\n`;\r\nexport const Name = styled.span`\r\n  color: #000;\r\n  font-weight: bold;\r\n`;\r\nexport const Username = styled.span`\r\n  font-size: 14px;\r\n`;\r\n","import { UserModel } from \"../models\";\r\nimport { UserComponent, Name, Username } from \"./User.style\";\r\n\r\ntype UsersProps = {\r\n  users: UserModel[];\r\n};\r\n\r\nexport const Users = ({ users }: UsersProps) => {\r\n  return (\r\n    <ol data-testid=\"usersList\">\r\n      {users.map((user, index) => (\r\n        <UserComponent key={`user-${index}`}>\r\n          <Name>{user.name}</Name>\r\n          <Username>@{user.username}</Username>\r\n        </UserComponent>\r\n      ))}\r\n    </ol>\r\n  );\r\n};\r\n","import { createApiService } from \"./createApiService\";\r\n\r\nconst api = createApiService(\"https://jsonplaceholder.typicode.com\");\r\n\r\nexport default api;\r\n","import axios from \"axios\";\r\n\r\nexport type Api = {\r\n  get: <T>(url: string) => Promise<T>;\r\n  post: <T>(url: string, data: T) => Promise<T>;\r\n};\r\n\r\nexport const createApiService = (baseUrl: string): Api => {\r\n  const joinWithBaseUrl = (url: string) => baseUrl + url;\r\n\r\n  const get = async <T>(url: string) => {\r\n    const response = await axios.get<T>(joinWithBaseUrl(url));\r\n\r\n    return response.data;\r\n  };\r\n\r\n  const post = async <T>(url: string, data: T) => {\r\n    const response = await axios.post<T>(joinWithBaseUrl(url), data);\r\n\r\n    return response.data;\r\n  };\r\n\r\n  return {\r\n    get,\r\n    post,\r\n  };\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const ContentWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 400px;\r\n\r\n  h1 {\r\n    text-align: center;\r\n  }\r\n\r\n  input {\r\n    height: 2em;\r\n  }\r\n`;\r\n\r\nexport const AppWrapper = styled.div`\r\n  margin: auto;\r\n`;\r\n","import React, { ChangeEvent, useMemo, useState } from \"react\";\nimport { filterUsers } from \"../utils\";\nimport { Users } from \"../Users\";\nimport { useUsers } from \"../hooks\";\nimport { AppWrapper, ContentWrapper } from \"./App.style\";\n\nconst useInput = () => {\n  const [inputValue, setInputValue] = useState<string>(\"\");\n\n  const handleInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setInputValue(e.target.value);\n  };\n\n  return { inputValue, handleInputChange };\n};\n\nfunction App() {\n  const { users, isError, isLoading, error } = useUsers();\n\n  const { inputValue: searchValue, handleInputChange } = useInput();\n\n  const filteredUsers = useMemo(\n    () => filterUsers(users, searchValue),\n    [searchValue, users]\n  );\n\n  const handleError = (content: JSX.Element) => {\n    if (isError) {\n      return <span>An error occured :(</span>;\n    }\n\n    if (isLoading) {\n      return <span>Loading...</span>;\n    }\n\n    return content;\n  };\n\n  return handleError(\n    <ContentWrapper>\n      <h1>Users list</h1>\n      <input\n        type=\"test\"\n        value={searchValue}\n        onChange={handleInputChange}\n        placeholder={\"Search by user name...\"}\n      />\n      {isError ? (\n        `An error occoured: ${error}`\n      ) : (\n        <Users users={filteredUsers} />\n      )}\n    </ContentWrapper>\n  );\n}\n\nconst WrapperApp = () => (\n  <AppWrapper>\n    <App />\n  </AppWrapper>\n);\n\nexport default WrapperApp;\n","import { useEffect, useMemo, useState } from \"react\";\r\nimport api from \"../api/jsonPlaceholderApi\";\r\nimport { UserDto } from \"../models\";\r\nimport { UserModel } from \"../models/user.model\";\r\n\r\n/** Custom model mapping protects from problems due to dto models change */\r\nconst mapDtoToUsers = (dtos: UserDto[]): UserModel[] => {\r\n  return dtos.map(({ id, name, username }) => ({\r\n    id,\r\n    name,\r\n    username,\r\n  }));\r\n};\r\n\r\ntype UseUsers = {\r\n  users: UserModel[];\r\n  isError: boolean;\r\n  error: string | null;\r\n  isLoading: boolean;\r\n};\r\n\r\nexport const useUsers = (): UseUsers => {\r\n  const [users, setUsers] = useState<UserModel[]>([]);\r\n\r\n  const [error, setError] = useState<string | null>(null);\r\n  const isError = useMemo(() => error !== null, [error]);\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    api\r\n      .get<UserDto[]>(\"/users\")\r\n      .then((users) => {\r\n        setUsers(mapDtoToUsers(users));\r\n        setIsLoading(false);\r\n      })\r\n      .catch((error: Error) => {\r\n        setError(error.message);\r\n      });\r\n  }, []);\r\n\r\n  return { users, isError, error, isLoading };\r\n};\r\n","import { UserModel } from \"../models\";\r\n\r\nexport function filterUsers(\r\n  users: UserModel[],\r\n  searchPhrase: string\r\n): UserModel[] {\r\n  const filteredUsers = users.filter((user) => {\r\n    const usernameLowerCase = user.name.toLowerCase();\r\n    const searchPhraseLowerCase = searchPhrase.toLowerCase();\r\n\r\n    return usernameLowerCase.includes(searchPhraseLowerCase);\r\n  });\r\n\r\n  return filteredUsers;\r\n}\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}